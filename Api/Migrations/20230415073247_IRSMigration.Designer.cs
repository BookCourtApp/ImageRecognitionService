// <auto-generated />
using System;
using Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Api.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20230415073247_IRSMigration")]
    partial class IRSMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Core.Models.BookMarkup", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("PhotoId")
                        .HasColumnType("uuid");

                    b.Property<int>("x0")
                        .HasColumnType("integer");

                    b.Property<int>("x1")
                        .HasColumnType("integer");

                    b.Property<int>("x2")
                        .HasColumnType("integer");

                    b.Property<int>("x3")
                        .HasColumnType("integer");

                    b.Property<int>("y0")
                        .HasColumnType("integer");

                    b.Property<int>("y1")
                        .HasColumnType("integer");

                    b.Property<int>("y2")
                        .HasColumnType("integer");

                    b.Property<int>("y3")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("PhotoId");

                    b.ToTable("BookMarkups");
                });

            modelBuilder.Entity("Core.Models.Photo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<byte[]>("Image")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.HasKey("Id");

                    b.ToTable("Photos");
                });

            modelBuilder.Entity("Core.Models.TextMarkup", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("BookMarkupId")
                        .HasColumnType("uuid");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("x0")
                        .HasColumnType("integer");

                    b.Property<int>("x1")
                        .HasColumnType("integer");

                    b.Property<int>("x2")
                        .HasColumnType("integer");

                    b.Property<int>("x3")
                        .HasColumnType("integer");

                    b.Property<int>("y0")
                        .HasColumnType("integer");

                    b.Property<int>("y1")
                        .HasColumnType("integer");

                    b.Property<int>("y2")
                        .HasColumnType("integer");

                    b.Property<int>("y3")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("BookMarkupId");

                    b.ToTable("TextMarkups");
                });

            modelBuilder.Entity("Core.Models.BookMarkup", b =>
                {
                    b.HasOne("Core.Models.Photo", "Photo")
                        .WithMany("BookMarkups")
                        .HasForeignKey("PhotoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Photo");
                });

            modelBuilder.Entity("Core.Models.TextMarkup", b =>
                {
                    b.HasOne("Core.Models.BookMarkup", "BookMarkup")
                        .WithMany()
                        .HasForeignKey("BookMarkupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BookMarkup");
                });

            modelBuilder.Entity("Core.Models.Photo", b =>
                {
                    b.Navigation("BookMarkups");
                });
#pragma warning restore 612, 618
        }
    }
}
